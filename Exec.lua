--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v86=0;while true do if (v86==0) then v19=v0(v3(v30,1,1));return "";end end else local v87=v2(v0(v30,16));if v19 then local v117=0;local v118;while true do if (v117==1) then return v118;end if (v117==0) then v118=v5(v87,v19);v19=nil;v117=1;end end else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -(878 -(282 + 595)))) -(v32-((2257 -(1523 + 114)) -(555 + 64)))) + (932 -(857 + 74)))) ;return v88-(v88%(569 -(367 + 201))) ;else local v89=(929 -(214 + 641 + 72))^(v32-(1 + 0)) ;return (((v31%(v89 + v89))>=v89) and (1 + 0)) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + (1067 -(68 + 997)) ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(226 + 1044)) );v18=v18 + (17 -(13 + 0)) ;return (v40 * 16777216) + (v39 * 65536) + (v38 * (373 -(32 + 85))) + v37 ;end local function v24() local v41=0;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(1 + 0)) then v44=958 -(892 + 65) ;v45=(v20(v43,2 -1 ,36 -16 ) * ((3 -(3 -2))^(382 -(87 + 263)))) + v42 ;v41=2;end if (v41==(183 -(67 + (131 -(10 + 8))))) then if (v46==(0 + 0)) then if (v45==(0 -0)) then return v47 * (0 + 0) ;else v46=3 -2 ;v44=952 -(802 + (577 -427)) ;end elseif (v46==(2489 -(416 + 26))) then return ((v45==(0 -0)) and (v47 * ((1 -0)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(2020 -(915 + 82)) ) * (v44 + (v45/((5 -3)^((98 -67) + 21)))) ;end if (v41==(2 -0)) then v46=v20(v43,21,1218 -(459 + 610 + 118) );v47=((v20(v43,72 -40 )==(1 -0)) and  -(1 + 0)) or (1 -0) ;v41=3 + 0 ;end if (v41==0) then v42=v23();v43=v23();v41=(1400 -608) -(368 + 423) ;end end end local function v25(v48) local v49;if  not v48 then local v90=438 -((917 -(201 + 571)) + 293) ;while true do if (v90==(430 -(44 + 386))) then v48=v23();if (v48==(1486 -(998 + 488))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 + (1138 -(116 + 1022))) );v18=v18 + v48 ;local v50={};for v67=1 + 0 , #v49 do v50[v67]=v2(v1(v3(v49,v67,v67)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v91== #"[") then if (v92== #"}") then v93=(function() return v94()~=(935 -(39 + 896)) ;end)();elseif (v92==(2 -0)) then v93=(function() return v95();end)();elseif (v92== #"xnx") then v93=(function() return v96();end)();end v97[v98]=(function() return v93;end)();break;end if (v91==(0 -0)) then local v124=(function() return 0 -0 ;end)();local v125=(function() return;end)();while true do if (v124==(0 -0)) then v125=(function() return 0 + 0 ;end)();while true do if ((0 + 0)~=v125) then else v92=(function() return v94();end)();v93=(function() return nil;end)();v125=(function() return 1;end)();end if (v125==(1 + 0)) then v91=(function() return  #"]";end)();break;end end break;end end end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v52=(function() return function(v99,v100,v101,v102,v103,v104,v105,v106,v107) local v108=(function() return 0;end)();local v99=(function() return;end)();local v100=(function() return;end)();while true do if (v108==0) then local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126==0) then v127=(function() return 0;end)();while true do if (v127~=0) then else local v130=(function() return 0;end)();while true do if (v130~=(397 -(115 + 281))) then else v127=(function() return 1 -0 ;end)();break;end if (v130==(0 -0)) then v99=(function() return 0 + 0 ;end)();v100=(function() return nil;end)();v130=(function() return 1582 -(1535 + 46) ;end)();end end end if (v127==(2 -1)) then v108=(function() return 1;end)();break;end end break;end end end if (v108~=1) then else local v128=(function() return 0 + 0 ;end)();while true do if (v128==(0 -0)) then while true do if (v99~=(560 -(306 + 254))) then else v100=(function() return v101();end)();if (v102(v100, #"\\", #",")==(867 -(550 + 317))) then local v131=(function() return 0 -0 ;end)();local v132=(function() return;end)();local v133=(function() return;end)();local v134=(function() return;end)();while true do if (v131~=(1469 -(899 + 568))) then else if (v102(v133, #"[", #"\\")== #",") then v134[2 -0 ]=(function() return v105[v134[2 + 0 ]];end)();end if (v102(v133,2,2)== #"|") then v134[ #"xnx"]=(function() return v105[v134[ #"91("]];end)();end v131=(function() return 8 -5 ;end)();end if (v131==3) then if (v102(v133, #"asd", #"xxx")~= #"~") then else v134[ #"0313"]=(function() return v105[v134[ #".dev"]];end)();end v106[v107]=(function() return v134;end)();break;end if (v131==(2 -1)) then local v136=(function() return 0;end)();while true do if (v136==(604 -(268 + 335))) then v131=(function() return 292 -(60 + 230) ;end)();break;end if (0==v136) then local v428=(function() return 285 -(134 + 151) ;end)();while true do if (v428==(1666 -(970 + 695))) then v136=(function() return 1 -0 ;end)();break;end if ((1990 -(582 + 1408))==v428) then v134=(function() return {v103(),v103(),nil,nil};end)();if (v132==0) then local v498=(function() return 1456 -(282 + 1174) ;end)();local v499=(function() return;end)();while true do if (v498~=0) then else v499=(function() return 811 -(569 + 242) ;end)();while true do if ((0 -0)~=v499) then else v134[ #"91("]=(function() return v103();end)();v134[ #".dev"]=(function() return v103();end)();break;end end break;end end elseif (v132== #"{") then v134[ #"asd"]=(function() return v104();end)();elseif (v132==(2 -0)) then v134[ #"xxx"]=(function() return v104() -(2^16) ;end)();elseif (v132== #"-19") then local v509=(function() return 0 -0 ;end)();local v510=(function() return;end)();while true do if (v509==0) then v510=(function() return 0 + 0 ;end)();while true do if (v510==(1824 -(1195 + 629))) then v134[ #"91("]=(function() return v104() -((2 -0)^(257 -(187 + 54))) ;end)();v134[ #".com"]=(function() return v103();end)();break;end end break;end end end v428=(function() return 1;end)();end end end end end if ((780 -(162 + 618))~=v131) then else local v137=(function() return 1251 -(721 + 530) ;end)();while true do if (v137==(1 + 0)) then v131=(function() return 1 + 0 ;end)();break;end if (v137==(0 -0)) then v132=(function() return v102(v100,4 -2 , #"91(");end)();v133=(function() return v102(v100, #"xnxx",9 -3 );end)();v137=(function() return 701 -(271 + 429) ;end)();end end end end end break;end end return v99,v100,v101,v102,v103,v104,v105,v106,v107;end end end end end;end)();local v53=(function() return function(v109,v110,v111) local v112=(function() return 0 + 0 ;end)();local v113=(function() return;end)();while true do if (v112==(1500 -(1408 + 92))) then v113=(function() return 1636 -(1373 + 263) ;end)();while true do if (v113~=0) then else v109[v110-#"." ]=(function() return v111();end)();return v109,v110,v111;end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"|",v58 do FlatIdent_104D4,Type,Cons,v21,v24,v25,v59,v69=(function() return v51(FlatIdent_104D4,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"asd"]=(function() return v21();end)();for v70= #"[",v23() do FlatIdent_A9A3,Descriptor,v21,v20,v22,v23,v59,v54,v70=(function() return v52(FlatIdent_A9A3,Descriptor,v21,v20,v22,v23,v59,v54,v70);end)();end for v71= #",",v23() do v55,v71,v28=(function() return v53(v55,v71,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1087 -(461 + 625) ];local v65=v61[1290 -(993 + 295) ];local v66=v61[1 + 2 ];return function(...) local v72=v64;local v73=v65;local v74=v66;local v75=v27;local v76=1172 -(418 + 753) ;local v77= -1;local v78={};local v79={...};local v80=v12("#",...) -(1 + 0) ;local v81={};local v82={};for v114=0 + (946 -(88 + 858)) ,v80 do if (v114>=v74) then v78[v114-v74 ]=v79[v114 + 1 + 0 ];else v82[v114]=v79[v114 + (530 -(406 + 123)) ];end end local v83=(v80-v74) + (1770 -(534 + 1215 + 20)) ;local v84;local v85;while true do v84=v72[v76];v85=v84[1 + 0 + 0 ];if (v85<=(1386 -(1249 + 73))) then if ((v85<=(12 + 19)) or (4219==1150)) then if (v85<=(1160 -(466 + 679))) then if ((v85<=(16 -9)) or (2421<622)) then if (((1009<=1130) and (v85<=(8 -5))) or (2989<=222)) then if (v85<=1) then if (v85>(1900 -(5 + 101 + 1794))) then v82[v84[1 + 1 ]]= #v82[v84[1 + 2 ]];else v82[v84[2]]=v82[v84[8 -5 ]] * v84[10 -6 ] ;end elseif ((2258>1241) and (v85==2)) then v82[v84[116 -(4 + 110) ]]=v82[v84[792 -(766 + 23) ]] + v84[588 -((281 -224) + 527) ] ;elseif (v84[2]<=v82[v84[1431 -(41 + 1386) ]]) then v76=v76 + 1 ;else v76=v84[(144 -38) -(17 + 86) ];end elseif (v85<=5) then if (v85==4) then if ((41<4259) and (v82[v84[2 + 0 ]]==v82[v84[8 -4 ]])) then v76=v76 + (2 -1) ;else v76=v84[169 -((321 -199) + 44) ];end else do return v82[v84[2 -0 ]];end end elseif ((2758<2980) and (v85==(19 -13))) then local v141=0 + 0 ;local v142;while true do if (v141==(1 + 0)) then for v458=v142,v77 do local v459=v78[v458-v142 ];v82[v458]=v459;end break;end if ((v141==0) or (86>=3626)) then v142=v84[(10 -7) -1 ];v77=(v142 + v83) -(66 -(30 + 35)) ;v141=(1074 -(1036 + 37)) + 0 ;end end else local v143=v84[1259 -(1043 + 152 + 62) ];local v144={};for v319=3 -2 , #v81 do local v320=0;local v321;while true do if (v320==(1212 -(323 + 889))) then v321=v81[v319];for v488=0 -0 , #v321 do local v489=v321[v488];local v490=v489[2 -(1 + 0) ];local v491=v489[582 -(361 + 219) ];if (((v490==v82) and (v491>=v143)) or (1930<56)) then local v495=(1800 -(641 + 839)) -(53 + 267) ;while true do if (v495==(0 + 0)) then v144[v491]=v490[v491];v489[414 -(15 + 398) ]=v144;break;end end end end break;end end end end elseif ((2395==2395) and (v85<=(993 -((931 -(910 + 3)) + 964)))) then if (v85<=9) then if (v85>(30 -22)) then local v145=v84[2 + 0 ];v82[v145]=v82[v145]();else v82[v84[2 + 0 ]]=v62[v84[853 -(20 + 830) ]];end elseif ((3333==3333) and (v85>(8 + 2))) then local v149=v73[v84[3]];local v150;local v151={};v150=v10({},{__index=function(v322,v323) local v324=v151[v323];return v324[127 -(116 + 10) ][v324[1 + 1 ]];end,__newindex=function(v325,v326,v327) local v328=1684 -(1466 + 218) ;local v329;while true do if (v328==(738 -(542 + 196))) then v329=v151[v326];v329[1][v329[3 -1 ]]=v327;break;end end end});for v330=1 + 0 ,v84[3 + 1 ] do local v331=0 + 0 + 0 ;local v332;while true do if (v331==((1150 -(556 + 592)) -(1 + 0))) then if ((3780>2709) and (v332[2 -1 ]==(1637 -(1126 + 425)))) then v151[v330-(406 -(118 + 287)) ]={v82,v332[8 -5 ]};else v151[v330-(378 -(142 + 235)) ]={v62,v332[980 -(553 + 424) ]};end v81[ #v81 + (1 -0) ]=v151;break;end if (v331==(0 + (0 -0))) then v76=v76 + 1 + 0 ;v332=v72[v76];v331=1 + 0 ;end end end v82[v84[1 + (1 -0) ]]=v29(v149,v150,v63);elseif (v82[v84[2 + 0 ]]~=v84[4]) then v76=v76 + (2 -1) ;else v76=v84[7 -4 ];end elseif (v85<=(29 -16)) then if (v85==(4 + 6 + 2)) then v63[v84[14 -11 ]]=v82[v84[755 -(239 + 514) ]];else local v155=v84[1 + 1 ];do return v82[v155](v13(v82,v155 + (1330 -(797 + 532)) ,v84[3]));end end elseif (v85==(11 + 3)) then local v156=v84[1 + 1 ];local v157=v82[v156];local v158=v84[3];for v333=1,v158 do v157[v333]=v82[v156 + v333 ];end else v82[v84[741 -(396 + 343) ]]=v82[v84[6 -3 ]] * v84[4] ;end elseif ((v85<=(1225 -(373 + 829))) or (2225==20)) then if ((v85<=(750 -(476 + 255))) or (237>=2273) or (872>=3092)) then if (v85<=(1147 -(369 + 761))) then if ((4404>=3252) and (v85>16)) then v62[v84[2 + 1 ]]=v82[v84[2 -0 ]];else v82[v84[2]]=v82[v84[(1 + 4) -2 ]][v84[4]];end elseif (v85>(256 -(64 + 174))) then if ((v84[2]<v82[v84[4]]) or (2040<=703)) then v76=v84[1 + 2 ];else v76=v76 + ((1478 -(29 + 1448)) -0) ;end elseif (v82[v84[(1727 -(135 + 1254)) -((542 -398) + 192) ]]==v84[(1027 -807) -(42 + 174) ]) then v76=v76 + 1 + 0 ;else v76=v84[3];end elseif ((1107>796) and (3279<=3967) and (v85<=(18 + 3))) then if ((959==959) and (v85==20)) then if ((v84[1 + 1 ]==v82[v84[4]]) or (1988==877)) then v76=v76 + (1505 -(363 + 1141)) ;else v76=v84[1583 -(789 + 394 + 397) ];end elseif (v84[(1532 -(389 + 1138)) -3 ]<=v82[v84[4]]) then v76=v76 + 1 + 0 ;else v76=v84[3 + 0 ];end elseif (v85>(1997 -(1913 + 62))) then v82[v84[(576 -(102 + 472)) + 0 + 0 ]][v82[v84[3]]]=v82[v84[10 -6 ]];else v82[v84[2]]=v84[3];end elseif (v85<=27) then if ((v85<=(1958 -(565 + 1368))) or (245>=2204)) then if ((4291>1912) and (v85==(90 -66))) then v82[v84[2]]=v62[v84[1664 -(1477 + 184) ]];else v82[v84[2 -0 ]]=v82[v84[3 + 0 ]] * v82[v84[4]] ;end elseif ((2003<2339) and (v85==(882 -(564 + 292)))) then local v171=0;local v172;while true do if ((3162>=2069) and (v171==(0 -0))) then v172=v84[2 + 0 ];v82[v172](v13(v82,v172 + (2 -1) ,v77));break;end end else for v336=v84[306 -(244 + 60) ],v84[3 + 0 ] do v82[v336]=nil;end end elseif ((432==432) and (v85<=(505 -(39 + 2 + 435)))) then if ((v85==(1029 -((2483 -(320 + 1225)) + 63))) or (306>3081)) then local v173=v84[2 + 0 ];do return v82[v173](v13(v82,v173 + (1126 -(936 + 189)) ,v77));end else local v174=0 + 0 ;local v175;local v176;local v177;while true do if (v174==0) then v175=v84[1615 -(1565 + 48) ];v176={v82[v175](v82[v175 + 1 + 0 ])};v174=1139 -(782 + 356) ;end if (v174==(268 -(176 + 91))) then v177=0 -0 ;for v466=v175,v84[5 -1 ] do v177=v177 + (1093 -(975 + 117)) ;v82[v466]=v176[v177];end break;end end end elseif ((v85>(1905 -(97 + 60 + 1718))) or (1145>=1253)) then if ((3418>2118) and (v82[v84[2 + 0 ]]==v82[v84[4]])) then v76=v76 + (3 -2) ;else v76=v84[10 -7 ];end else v82[v84[1020 -(697 + 321) ]][v82[v84[3]]]=v82[v84[10 -6 ]];end elseif (v85<=(99 -52)) then if ((v85<=(89 -50)) or (3513<2706)) then if ((2978<3639) and (v85<=(14 + 21))) then if (v85<=((1525 -(157 + 1307)) -28)) then if (v85==32) then local v180=v84[7 -4 ];local v181=v82[v180];for v338=v180 + 1 ,v84[1231 -(322 + 905) ] do v181=v181   .. v82[v338] ;end v82[v84[(2472 -(821 + 1038)) -(602 + (22 -13)) ]]=v181;else v82[v84[1191 -(449 + 740) ]]=v29(v73[v84[3]],nil,v63);end elseif (v85>(906 -(826 + 46))) then v82[v84[949 -(245 + 77 + 625) ]]();else local v184=v84[2];local v185={};for v339=3 -2 , #v81 do local v340=v81[v339];for v393=0 + 0 , #v340 do local v394=v340[v393];local v395=v394[1899 -(260 + 1638) ];local v396=v394[442 -(382 + 58) ];if ((v395==v82) and (v396>=v184)) then v185[v396]=v395[v396];v394[3 -2 ]=v185;end end end end elseif (v85<=(31 + 6)) then if (v85==((129 -56) -37)) then local v186=v84[3];local v187=v82[v186];for v341=v186 + (2 -(1 + 0)) ,v84[(2996 -1787) -(902 + 303) ] do v187=v187   .. v82[v341] ;end v82[v84[3 -(1027 -(834 + 192)) ]]=v187;else local v189=0 -0 ;local v190;while true do if ((3066<=3890) and (v189==(0 + 0))) then v190=v84[1692 -(1121 + 569) ];do return v82[v190](v13(v82,v190 + (215 -(22 + 13 + 179)) ,v84[3]));end break;end end end elseif (v85==(721 -(483 + 200))) then v82[v84[1465 -(1404 + 59) ]]=v82[v84[8 -5 ]][v84[4 -0 ]];else v82[v84[767 -(468 + 297) ]]={};end elseif ((3682>=2888) and (v85<=((156 + 449) -(334 + 228)))) then if (v85<=41) then if ((149<479) and (v85>((3 + 131) -94))) then if ((1020>=567) and (v82[v84[4 -2 ]]<v82[v84[6 -(2 -0) ]])) then v76=v76 + 1 + 0 ;else v76=v84[239 -(141 + 95) ];end else v82[v84[2]]=v84[3 + 0 ]^v82[v84[9 -5 ]] ;end elseif (v85>(100 -58)) then local v195=v84[2];do return v13(v82,v195,v77);end else v82[v84[1 + (305 -(300 + 4)) ]]=v82[v84[8 -5 ]] -v82[v84[4]] ;end elseif (v85<=(32 + 13)) then if (v85==(23 + 21)) then local v197=v84[2 -0 ];local v198=v84[3 + 1 ];local v199=v197 + (165 -(92 + 71)) ;local v200={v82[v197](v82[v197 + (1 -0) ],v82[v199])};for v342=1,v198 do v82[v199 + v342 ]=v200[v342];end local v201=v200[766 -(574 + 191) ];if (v201 or (733>2469)) then v82[v199]=v201;v76=v84[3 + 0 ];else v76=v76 + 1 ;end else local v202=0 -0 ;local v203;while true do if ((2497==2497) and ((0 + (0 -0))==v202)) then v203=v84[851 -(254 + (957 -(112 + 250))) ];v82[v203]=v82[v203](v13(v82,v203 + 1 ,v77));break;end end end elseif (v85==(172 -(55 + 71))) then do return v82[v84[2 -0 ]]();end else v82[v84[1792 -(573 + 1217) ]]=v82[v84[8 -5 ]] * v82[v84[1 + 3 ]] ;end elseif ((v85<=((36 + 52) -33)) or (2998>=3281)) then if (v85<=(990 -(714 + 225))) then if ((3901==3901) and (v85<=49)) then if (v85>(140 -92)) then if (v82[v84[(4 -2) -0 ]]==v84[1 + 0 + 3 ]) then v76=v76 + (1 -0) ;else v76=v84[809 -(118 + 688) ];end else local v205=v73[v84[51 -(25 + 23) ]];local v206;local v207={};v206=v10({},{__index=function(v345,v346) local v347=0 + 0 ;local v348;while true do if (v347==(1886 -(927 + 959))) then v348=v207[v346];return v348[1][v348[2]];end end end,__newindex=function(v349,v350,v351) local v352=0 -0 ;local v353;while true do if (v352==0) then v353=v207[v350];v353[733 -(16 + 716) ][v353[2]]=v351;break;end end end});for v354=1 -0 ,v84[101 -(11 + 86) ] do v76=v76 + (2 -1) ;local v355=v72[v76];if ((v355[286 -(175 + 110) ]==(216 -130)) or (4649<=2632)) then v207[v354-(4 -3) ]={v82,v355[3 + 0 ]};else v207[v354-(1062 -(810 + 251)) ]={v62,v355[3 + 0 ]};end v81[ #v81 + (534 -(43 + 490)) ]=v207;end v82[v84[2]]=v29(v205,v206,v63);end elseif (v85==((2197 -(1001 + 413)) -(711 + 22))) then local v209=v84[7 -5 ];local v210,v211=v75(v82[v209](v82[v209 + (860 -(240 + 619)) ]));v77=(v211 + v209) -(1 + 0) ;local v212=0 -0 ;for v357=v209,v77 do v212=v212 + 1 + 0 ;v82[v357]=v210[v212];end else v82[v84[1746 -(1344 + 400) ]]=v82[v84[(909 -501) -(255 + 150) ]][v82[v84[4]]];end elseif (v85<=(42 + 11)) then if ((201<415) and (v85==52)) then if ((v84[2 + 0 ]<v82[v84[16 -12 ]]) or (3860>4872)) then v76=v84[9 -6 ];else v76=v76 + (1740 -((1286 -(244 + 638)) + 1335)) ;end elseif (v84[408 -(183 + (916 -(627 + 66))) ]<v82[v84[4]]) then v76=v76 + (1 -0) ;else v76=v84[8 -5 ];end elseif ((v85==(36 + (620 -(512 + 90)))) or (133==1784)) then v82[v84[1 + 1 ]]=v82[v84[340 -((1916 -(1665 + 241)) + 327) ]] + v82[v84[3 + 1 ]] ;else local v216=v84[340 -(118 + 220) ];local v217=v84[2 + 2 ];local v218=v216 + 2 ;local v219={v82[v216](v82[v216 + 1 + 0 ],v82[v218])};for v360=4 -3 ,v217 do v82[v218 + v360 ]=v219[v360];end local v220=v219[1494 -(711 + 782) ];if v220 then v82[v218]=v220;v76=v84[5 -2 ];else v76=v76 + (470 -(270 + 199)) ;end end elseif ((v85<=59) or (3998==2298)) then if ((v85<=(19 + 38)) or (7>=310)) then if ((4992>286) and (v85>(1875 -(262 + 318 + 1239)))) then local v221=0 -0 ;local v222;while true do if ((v221==(0 + 0)) or (8>=2739)) then v222=v84[2 + 0 ];v82[v222](v82[v222 + (2 -1) + 0 ]);break;end end else local v223=v84[1 + (1 -0) ];local v224={v82[v223](v13(v82,v223 + 1 + 0 ,v84[3]))};local v225=1167 -(645 + 522) ;for v363=v223,v84[4] do v225=v225 + (1791 -(1010 + 780)) ;v82[v363]=v224[v225];end end elseif ((2590==2590) and (v85==(58 + 0))) then local v226=0;local v227;while true do if ((v226==(0 -0)) or (2561==3893)) then v227=v82[v84[(9 + 2) -7 ]];if  not v227 then v76=v76 + 1 ;else local v492=1836 -(1045 + 791) ;while true do if (v492==(0 -0)) then v82[v84[2 -0 ]]=v227;v76=v84[508 -((750 -399) + 154) ];break;end end end break;end end else local v228=v84[2];v82[v228]=v82[v228](v13(v82,v228 + (1575 -(1281 + 293)) ,v84[3]));end elseif ((4362>=1421) and ((v85<=(1 + 60)) or (82>=1870))) then if ((2624<4557) and (v85>(326 -(28 + (1474 -(298 + 938)))))) then local v230=0 -0 ;local v231;while true do if ((v230==(1560 -(1381 + (1437 -(233 + 1026))))) or (3131>3542)) then for v475=v231,v77 do local v476=(1666 -(636 + 1030)) + 0 ;local v477;while true do if ((2577>=1578) and (v476==(0 + 0))) then v477=v78[v475-v231 ];v82[v475]=v477;break;end end end break;end if ((75<=3546) and (4103<=4571) and (v230==(0 + 0 + 0 + 0))) then v231=v84[6 -4 ];v77=(v231 + v83) -(1 + 0) ;v230=471 -(381 + 89) ;end end elseif ((2680<=3418) and (v82[v84[2 + 0 ]]<=v82[v84[3 + 1 + 0 ]])) then v76=v76 + (1 -(0 + 0)) ;else v76=v84[3];end elseif (v85<=62) then local v232=v84[1158 -(1074 + 82) ];v82[v232]=v82[v232]();elseif (v85>(137 -(295 -(55 + 166)))) then if (v84[1786 -(214 + 1570) ]==v82[v84[1459 -(192 + 798 + 47 + 418) ]]) then v76=v76 + 1 + 0 ;else v76=v84[2 + 1 ];end else do return;end end elseif (v85<=(95 + 2)) then if (v85<=80) then if ((v85<=(283 -211)) or (1495==4787)) then if ((v85<=(1794 -(1668 + 58))) or (4288<2876)) then if ((2462>=1147) and ((v85<=(692 -(512 + 114))) or (310>4434))) then if (v85==(169 -104)) then if (v82[v84[(11 -8) -(298 -(36 + 261)) ]]~=v82[v84[4]]) then v76=v76 + (3 -(3 -1)) ;else v76=v84[2 + 1 ];end else v82[v84[2]][v84[1 + 2 ]]=v82[v84[4 + 0 ]];end elseif ((v85==(225 -158)) or (4914<2480)) then local v236=v84[1996 -(109 + 1885) ];local v237={v82[v236](v13(v82,v236 + 1 ,v77))};local v238=0 -0 ;for v366=v236,v84[819 -(98 + 717) ] do v238=v238 + (827 -(802 + 24)) ;v82[v366]=v237[v238];end else local v239=0 -0 ;local v240;local v241;while true do if (v239==(1 -(0 + 0))) then v82[v240 + 1 ]=v241;v82[v240]=v241[v84[1 + 3 ]];break;end if (v239==(0 + 0)) then v240=v84[1 + 1 ];v241=v82[v84[3]];v239=1 + 0 ;end end end elseif (v85<=(194 -124)) then if (v85==(229 -160)) then v82[v84[1 + 1 ]]=v84[3]^v82[v84[1287 -(1035 + 248) ]] ;else local v243=v84[1 + 1 ];v82[v243](v13(v82,v243 + 1 ,v84[(24 -(20 + 1)) + 0 + 0 ]));end elseif (v85==71) then local v244=v84[2];do return v82[v244](v13(v82,v244 + 1 ,v77));end elseif (v82[v84[2 + (319 -(134 + 185)) ]] or (1559==1240)) then v76=v76 + 1 + (1133 -(549 + 584)) ;else v76=v84[1436 -(797 + 636) ];end elseif (v85<=(368 -292)) then if (v85<=74) then if (v85==73) then v82[v84[2]]=v84[1622 -(1427 + 192) ]~=(0 + 0) ;else v82[v84[4 -2 ]][v84[3 + (685 -(314 + 371)) ]]=v84[4];end elseif (v85>(34 + 41)) then v82[v84[2]]={};else local v249=v84[328 -(192 + 134) ];local v250={v82[v249](v82[v249 + 1 + 0 ])};local v251=0 + 0 ;for v369=v249,v84[4 + 0 ] do v251=v251 + ((971 -(478 + 490)) -2) ;v82[v369]=v250[v251];end end elseif ((566==566) and (2168<=4360) and (v85<=(629 -(83 + 468)))) then if ((994==994) and (v85>(1883 -(1202 + 604)))) then v82[v84[9 -7 ]][v84[4 -1 ]]=v84[10 -6 ];else v82[v84[327 -(45 + 280) ]]=v82[v84[3 + 0 ]] + v82[v84[4]] ;end elseif (v85==79) then v82[v84[2 + 0 ]]=v82[v84[2 + 1 ]]/v84[4] ;else v82[v84[2 + 0 ]]=v63[v84[1 + 2 ]];end elseif ((3921>=3009) and (1655>401) and (v85<=88)) then if ((2063>=1648) and (v85<=((82 + 72) -(1242 -(786 + 386))))) then if ((3063<=3426) and (v85<=82)) then if (v85==81) then if (v82[v84[2]]<v82[v84[1915 -(340 + 1571) ]]) then v76=v84[3];else v76=v76 + 1 + 0 ;end else v82[v84[(5745 -3971) -(1733 + 39) ]]=v82[v84[8 -5 ]] -v82[v84[1038 -(125 + 909) ]] ;end elseif ((1459>764) and (v85>(2031 -(1096 + 852)))) then v82[v84[1 + 1 ]]= #v82[v84[3 -0 ]];elseif ( not v82[v84[2 + 0 ]] or (641>4334)) then v76=v76 + 1 ;else v76=v84[515 -(409 + 103) ];end elseif (v85<=(322 -(46 + 190))) then if ((1066>=452) and (v85==(1464 -(1055 + 324)))) then local v260=v84[97 -(51 + 44) ];v82[v260]=v82[v260](v13(v82,v260 + 1 + 0 ,v84[1320 -(1114 + 203) ]));else v82[v84[728 -(228 + 498) ]]=v82[v84[1 + 2 ]];end elseif (v85>((1389 -(1093 + 247)) + 34 + 4)) then v82[v84[665 -(174 + 489) ]]=v84[7 -4 ]~=0 ;else v63[v84[3]]=v82[v84[1907 -(830 + 1075) ]];end elseif (v85<=(616 -(303 + 221))) then if ((3399>=2260) and (v85<=(1359 -(25 + 206 + (4121 -3083))))) then if ((v85==89) or (393>=4242)) then v82[v84[2]]=v29(v73[v84[3 + (0 -0) ]],nil,v63);else local v268=1162 -(171 + 991) ;local v269;while true do if ((4974>=2655) and (v268==(0 -0))) then v269=v84[5 -3 ];do return v13(v82,v269,v77);end break;end end end elseif ((v85>(227 -136)) or (2721<=907)) then if ((4437>=3031) and (v82[v84[2 + (0 -0) ]]<v82[v84[4]])) then v76=v84[10 -7 ];else v76=v76 + ((4 -2) -1) ;end elseif v82[v84[2 -0 ]] then v76=v76 + (3 -2) ;else v76=v84[2 + 1 ];end elseif (v85<=(1342 -(111 + 1137))) then if (v85==(251 -(91 + 67))) then v62[v84[8 -5 ]]=v82[v84[1 + 1 ]];else do return v82[v84[525 -(423 + 100) ]];end end elseif ((v85<=(1 + (362 -268))) or (4470<2949)) then local v272=0 -0 ;local v273;local v274;local v275;while true do if (v272==(1 + (0 -0))) then v275=(582 + 189) -(326 + 445) ;for v479=v273,v84[17 -13 ] do v275=v275 + (2 -1) ;v82[v479]=v274[v275];end break;end if ((v272==(0 -0)) or (1580==2426)) then v273=v84[(1823 -1110) -(530 + 181) ];v274={v82[v273](v13(v82,v273 + (33 -(19 + 13)) ,v84[7 -4 ]))};v272=1 -0 ;end end elseif ((v85==(223 -127)) or (3711==503)) then v76=v84[3];else v82[v84[5 -3 ]]=v63[v84[3]];end elseif (v85<=(30 + 83)) then if (v85<=(184 -79)) then if (v85<=(209 -108)) then if (v85<=99) then if (v85>(1910 -(1293 + 519))) then local v276=v84[3 -(2 -1) ];local v277,v278=v75(v82[v276](v13(v82,v276 + (2 -1) ,v84[5 -2 ])));v77=(v278 + v276) -(4 -3) ;local v279=0 -0 ;for v372=v276,v77 do local v373=0 + 0 ;while true do if (((989<4859) and (v373==(0 + 0))) or (420==4318)) then v279=v279 + 1 ;v82[v372]=v277[v279];break;end end end else local v280=0 -0 ;local v281;while true do if (v280==(0 + 0 + 0)) then v281=v84[1 + 1 ];v82[v281](v13(v82,v281 + 1 ,v84[2 + 1 ]));break;end end end elseif (v85>(1196 -(709 + 387))) then local v282=v84[1860 -((2815 -2142) + 1185) ];v82[v282]=v82[v282](v13(v82,v282 + (2 -1) ,v77));else v82[v84[6 -4 ]]=v82[v84[4 -1 ]]/v84[3 + 1 ] ;end elseif ((v85<=(77 + 26)) or (4795<949)) then if (v85>(137 -35)) then local v285=0 + 0 ;local v286;while true do if ((v285==(0 -(0 -0))) or (4158<=33)) then v286=v84[3 -1 ];v82[v286]=v82[v286](v82[v286 + ((5712 -3831) -(446 + 1434)) ]);break;end end else local v287=v84[1285 -(1040 + 243) ];local v288=v82[v287];local v289=v84[8 -(1273 -(1249 + 19)) ];for v374=1848 -(559 + 1288) ,v289 do v288[v374]=v82[v287 + v374 ];end end elseif (v85==(2035 -(609 + 1322))) then v82[v84[456 -(13 + 441) ]]=v82[v84[10 -7 ]] + v84[10 -6 ] ;else v76=v84[3];end elseif (v85<=(542 -433)) then if (v85<=(4 + 103)) then if ((3842==3842) and (v85>(384 -278))) then if  not v82[v84[1 + 1 ]] then v76=v76 + 1 ;else v76=v84[2 + 1 ];end elseif (v82[v84[5 -3 ]]<=v82[v84[3 + 1 ]]) then v76=v76 + ((1 + 0) -0) ;else v76=v84[2 + 1 ];end elseif (v85>(61 + 47)) then do return;end else v82[v84[2 + 0 ]]=v82[v84[3]];end elseif ((v85<=(94 + 17)) or (99>4744)) then if (v85>((420 -312) + 2)) then if (v84[435 -(153 + 280) ]<v82[v84[11 -7 ]]) then v76=v76 + 1 + 0 ;else v76=v84[2 + 1 ];end else local v294=0 + 0 ;local v295;while true do if ((4341==4341) and (v294==(0 + 0))) then v295=v84[2 + 0 ];v82[v295](v82[v295 + (1 -0) ]);break;end end end elseif ((255<=1596) and (v85==(70 + 42))) then v82[v84[669 -(89 + 578) ]]=v82[v84[3]][v82[v84[3 + 1 ]]];else local v298=v82[v84[8 -4 ]];if ( not v298 or (4433<1635)) then v76=v76 + 1 ;else v82[v84[1051 -(572 + 477) ]]=v298;v76=v84[1089 -(686 + 400) ];end end elseif (v85<=(17 + 82 + 22)) then if ((1747<=3601) and (v85<=(71 + (275 -(73 + 156))))) then if ((v85<=(14 + 101)) or (4300<3244)) then if ((v85>(200 -(84 + 2))) or (804>4359) or (3534>4677)) then v82[v84[(1 + 1) -0 ]]();else local v299=0;while true do if (v299==(0 + 0)) then v82[v84[844 -(497 + 345) ]]=v84[1 + 2 ]~=0 ;v76=v76 + 1 + 0 ;break;end end end elseif (v85==(1449 -((1416 -(721 + 90)) + 728))) then local v300=v84[1 + 1 + 0 ];local v301,v302=v75(v82[v300](v13(v82,v300 + 1 ,v84[6 -3 ])));v77=(v302 + v300) -(1 + 0) ;local v303=0 -0 ;for v377=v300,v77 do v303=v303 + 1 ;v82[v377]=v301[v303];end elseif (((4670>=3623) and (v82[v84[2 + 0 ]]<v82[v84[4]])) or (4859<2999)) then v76=v76 + (2 -1) ;else v76=v84[3 + (0 -0) ];end elseif ((2065<2544) and (v85<=119)) then if ((1311<=3359) and (v85==((1077 -(224 + 246)) -(457 + 32)))) then v82[v84[2]]=v84[2 + 1 ]~=(1402 -(832 + 570)) ;v76=v76 + 1 + 0 ;else for v380=v84[(1 -0) + 1 ],v84[10 -(12 -5) ] do v82[v380]=nil;end end elseif ((2717<=3156) and (v85==(58 + 62))) then local v305=0;local v306;local v307;while true do if ((4726>2407) and (v305==(796 -(588 + 38 + 170)))) then v306=v84[5 -(1 + 2) ];v307=v82[v306];v305=1801 -(650 + 234 + 916) ;end if ((1081<4524) and (v305==(1 -0))) then for v484=v306 + 1 + 0 ,v84[656 -((460 -228) + (1400 -979)) ] do v7(v307,v82[v484]);end break;end end elseif (v82[v84[1891 -(1569 + 320) ]]~=v84[4]) then v76=v76 + (514 -(203 + 310)) ;else v76=v84[3];end elseif (v85<=(31 + 94)) then if (((440>=71) and (v85<=(24 + 99))) or (1284>3669)) then if ((4934>2607) and (v85>122)) then local v308=v84[6 -4 ];do return v13(v82,v308,v308 + v84[608 -(316 + 289) ] );end else v82[v84[(1998 -(1238 + 755)) -3 ]]=v84[1 + 2 ];end elseif (v85==((111 + 1466) -(666 + (2321 -(709 + 825))))) then v82[v84[427 -(360 + 65) ]][v84[3 + 0 ]]=v82[v84[4]];else do return v82[v84[256 -(79 + 175) ]]();end end elseif ((v85<=(199 -72)) or (1400>3116)) then if (v85==(99 + 27)) then local v313=0 -0 ;local v314;local v315;local v316;while true do if (v313==(1 -0)) then v316=899 -(503 + 396) ;for v485=v314,v84[185 -(92 + 89) ] do v316=v316 + (1 -0) ;v82[v485]=v315[v316];end break;end if ((525<1662) and (v313==(0 + 0))) then v314=v84[2];v315={v82[v314](v13(v82,v314 + (3 -2) ,v77))};v313=1 + 0 ;end end else local v317=v84[4 -2 ];v82[v317]=v82[v317](v82[v317 + 1 ]);end elseif ((1117<2549) and (v85<=128)) then if ((v82[v84[2 + 0 ]]~=v82[v84[2 + 2 ]]) or (876>2550)) then v76=v76 + ((3 -1) -1) ;else v76=v84[1 + 2 ];end elseif ((219<=2456) and (v85>(196 -67))) then local v423=v84[1246 -(485 + (1105 -346)) ];local v424,v425=v75(v82[v423](v82[v423 + 1 ]));v77=(v425 + v423) -1 ;local v426=0 -0 ;for v455=v423,v77 do v426=v426 + 1 ;v82[v455]=v424[v426];end else local v427=v84[1191 -(442 + (1611 -(196 + 668))) ];v82[v427](v13(v82,v427 + (1136 -(832 + 303)) ,v77));end v76=v76 + (3 -2) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);